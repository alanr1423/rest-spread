Function filterOutOdds(..nums) {
	return nums.filter(num => num % 2 === 0);
}

Function findMin (... num) {
	return Math.min(...nums);
}

function mergeObjects(obj1, obj2) {
    return { ...obj1, ...obj2 };
}

function doubleAndReturnArgs(arr, ...args) {
    const doubledArgs = args.map(arg => arg * 2);
    return [...arr, ...doubledArgs];
}

const removeRandom = (items) => {
    const randomIndex = Math.floor(Math.random() * items.length);
    return [...items.slice(0, randomIndex), ...items.slice(randomIndex + 1)];
};

const extend = (array1, array2) => {
    return [...array1, ...array2];
};

const addKeyVal = (obj, key, val) => {
    return { ...obj, [key]: val };
};

const removeKey = (obj, key) => {
	const { [key]: removeKey, ..rest } = obj;
	return rest;
};

const combine = (obj1, obj2) => {
  return { ...obj1, ...obj2 };
};

const update = (obj, key, val) => {
    return { ...obj, [key]: val };
};


